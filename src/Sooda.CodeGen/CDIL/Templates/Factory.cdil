class ${ClassName}_Factory
    extends System.Object
    implements ISoodaObjectFactory
    
    constructor ()
        attributes Private
    begin
    end
    
#ifnot MultiColumnPrimaryKey
    field SoodaFieldHandler _primaryKeyFieldHandler
        attributes Private,Static
        value new ${PrimaryKeyHandlerType}(false)
    end
#endif
    
    field ${ClassName}_Factory _theFactory
        attributes Private,Static
        value new ${ClassName}_Factory()
    end
    
    field Sooda.Schema.ClassInfo _theClassInfo
        attributes Private,Static
        value typeref(${OutNamespace}._DatabaseSchema).GetSchema().FindClassByName('${ClassName}')
    end
    
    field Type _theType
        attributes Private,Static
        value typeof(${ClassName})
    end
    
    property ${ClassName}_Factory TheFactory
        attributes Public,Static
    get
        return defaultscope._theFactory$;
    end
    
    property Type TheType
        attributes Public
        implements ISoodaObjectFactory
    get
        return defaultscope._theType$;
    end
    
    property Sooda.Schema.ClassInfo TheClassInfo
        attributes Public,Static
    get
        return defaultscope._theClassInfo$;
    end
    
    method GetRef(SoodaTransaction tran, System.Object keyValue)
        returns SoodaObject
        attributes Public
        implements ISoodaObjectFactory
    begin
        return typeref(${LoaderClass}).GetRef(arg(tran), cast(${GetRefArgumentType},arg(keyValue)))
    end
    
    method TryGet(SoodaTransaction tran, System.Object keyValue)
        returns SoodaObject
        attributes Public
        implements ISoodaObjectFactory
    begin
        return typeref(${LoaderClass}).TryGet(arg(tran), cast(${GetRefArgumentType},arg(keyValue)))
    end
    
    method GetList(SoodaTransaction tran, SoodaWhereClause whereClause, SoodaOrderBy orderBy, SoodaSnapshotOptions options)
        returns System.Collections.IList
        attributes Public
        implements ISoodaObjectFactory
    begin
        return new Sooda.ObjectMapper.SoodaObjectListSnapshot(arg(tran), arg(whereClause), arg(orderBy), 0, -1, arg(options), defaultscope.TheClassInfo)
    end
    
    method GetClassInfo()
        returns Sooda.Schema.ClassInfo
        attributes Public
        implements ISoodaObjectFactory
    begin
        return defaultscope.TheClassInfo;
    end
    
    method GetPrimaryKeyFieldHandler()
        returns Sooda.ObjectMapper.SoodaFieldHandler
        attributes Public
        implements ISoodaObjectFactory
    begin
#if MultiColumnPrimaryKey
        throw new NotSupportedException('GetPrimaryKeyFieldHandler() makes no sense on multi-column primary keys.')
#else
        return defaultscope._primaryKeyFieldHandler$;
#endif
    end
    
    method GetFieldHandler(System.Int32 ordinal)
        returns Sooda.ObjectMapper.SoodaFieldHandler
        attributes Public
        implements ISoodaObjectFactory
    begin
        return defaultscope.InternalGetFieldHandler(arg(ordinal));
    end
    
    method InternalGetFieldHandler(System.Int32 ordinal)
        returns Sooda.ObjectMapper.SoodaFieldHandler
        attributes Assembly,Static
    begin
        return index(defaultscope._theClassInfo.UnifiedFields, arg(ordinal)).GetFieldHandler()
    end
    
    method CreateNew(SoodaTransaction tran)
        returns SoodaObject
        attributes Public
        implements ISoodaObjectFactory
    begin
#if IsAbstract
        throw new NotSupportedException('Cannot create instances of abstract class ${ClassName}')
#else
        return new ${ClassName}(arg(tran))
#endif
    end

    method GetRawObject(SoodaTransaction tran)
        returns SoodaObject
        attributes Public
        implements ISoodaObjectFactory
    begin
#if IsAbstract
        throw new NotSupportedException('Cannot create instances of abstract class ${ClassName}')
#else
        var ${ClassName} retVal = new ${ClassName}(typeref(SoodaConstructor).Constructor);
        call var(retVal).InitRawObject(arg(tran));
        return var(retVal)
#endif
    end
end    
